apiVersion: v1
kind: ConfigMap
metadata:
  name: ${CLUSTER_NAME}-config
  namespace: default
data:
  # 类文件键
  base.toml: |
    Title="${TITLE}"
    FixTime=false
    version="1.64.0-68f55015"
    
    [log]
    # 日志级别，支持debug(dbug)/info/warn/error(eror)/crit
    loglevel = "debug"
    logConsoleLevel = "info"
    # 日志文件名，可带目录，所有生成的日志文件都放到此目录下
    logFile = "logs/chain33.log"
    # 单个日志文件的最大值（单位：兆）
    maxFileSize = 300
    # 最多保存的历史日志文件个数
    maxBackups = 100
    # 最多保存的历史日志消息（单位：天）
    maxAge = 28
    # 日志文件名是否使用本地事件（否则使用UTC时间）
    localTime = true
    # 历史日志文件是否压缩（压缩格式为gz）
    compress = true
    # 是否打印调用源文件和行号
    callerFile = false
    # 是否打印调用方法
    callerFunction = false
    
    [blockchain]
    defCacheSize=128
    maxFetchBlockNum=128
    timeoutSeconds=5
    batchBlockNum=128
    driver="leveldb"
    dbPath="datadir"
    dbCache=64
    isStrongConsistency=false
    singleMode=true
    batchsync=false
    isRecordBlockSequence=true
    isParaChain=false
    enableTxQuickIndex=true
    enableReExecLocal=true
    # 使能精简localdb
    enableReduceLocaldb=true
    disableShard=true
    
    [p2p]
    # 配置p2p网络类型，dht,gossip两种
    types=["gossip"]
    dbPath="datadir/addrbook"
    dbCache=4
    grpcLogFile="grpc33.log"
    #waitPid 等待seed导入
    waitPid=false
    # 是否启动P2P服务
    enable=true
    driver="leveldb"
    
    [p2p.sub.gossip]
    port=13802
    seeds=[${SEEDS}]
    isSeed=false
    innerSeedEnable=false
    useGithub=false
    innerBounds=300
    channel=2001
    serverStart=true
    
    [rpc]
    jrpcBindAddr=":8801"
    grpcBindAddr=":8802"
    whitelist=["*"]
    jrpcFuncWhitelist=["*"]
    grpcFuncWhitelist=["*"]
    
    
    [mempool]
    name="timeline"
    poolCacheSize=20240
    #minTxFeeRate=100000
    
    [consensus]
    name="tendermint"
    minerstart=false
    
    [mver.consensus]
    fundKeyAddr = "1BQXS6TxaYYG5mADaWij4AxhZZUTpw95a5"
    powLimitBits = "0x1f00ffff"
    maxTxNumber = 1600      #160
    
    [mver.consensus.ForkChainParamV1]
    maxTxNumber = 10000
    
    [mver.consensus.ForkChainParamV2]
    powLimitBits = "0x1f2fffff"
    
    [consensus.sub.tendermint]
    genesis="14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"
    genesisAmount=100000000
    genesisBlockTime=1514533394
    timeoutTxAvail=1000
    timeoutPropose=1000
    timeoutProposeDelta=500
    timeoutPrevote=1000
    timeoutPrevoteDelta=500
    timeoutPrecommit=1000
    timeoutPrecommitDelta=500
    timeoutCommit=500
    skipTimeoutCommit=false
    createEmptyBlocks=false
    createEmptyBlocksInterval=0
    validatorNodes=[${VALIDATORNODES}]
    fastSync=false
    # Propose阶段是否预执行区块
    preExec=false
    # 签名算法,支持"secp256k1","ed25519","sm2","bls",默认为"ed25519"
    signName="bls"
    # 是否使用聚合签名,签名算法需支持该特性,比如"bls"
    useAggregateSignature=true
    
    
    [store]
    name="kvmvcc"
    driver="leveldb"
    dbPath="datadir/kvmvcc"
    dbCache=128
    
    [store.sub.kvmvcc]
    enableMavlPrefix=false
    enableMVCC=false
    
    [wallet]
    minFee=100000
    driver="leveldb"
    dbPath="datadir/wallet"
    dbCache=16
    signType="secp256k1"
    
    [wallet.sub.ticket]
    minerdisable=true
    minerwhitelist=["*"]
    
    [wallet.sub.multisig]
    rescanMultisigAddr=false
    
    [exec]
    isFree=true
    minExecFee=0
    enableStat=false
    enableMVCC=false
    alias=["token1:token","token2:token","token3:token"]
    saveTokenTxList=false
    
    [exec.sub.manage]
    superManager=["14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"]
    
    [exec.sub.token]
    saveTokenTxList=true
    tokenApprs=[]
    
    [exec.sub.cert]
    # 是否启用证书验证和签名
    enable=false
    # 加密文件路径
    cryptoPath="."
    # 带证书签名类型，支持"auth_ecdsa", "auth_sm2"
    signType="auth_sm2"
    
    [exec.sub.relay]
    genesis="12qyocayNF7Lv6C9qW4avxs2E7U41fKSfv"
    
    [exec.sub.paracross]
    nodeGroupFrozenCoins=0
    #平行链共识停止后主链等待的高度
    paraConsensusStopBlocks=30000
    
    [exec.sub.autonomy]
    total="16htvcBNSEA7fZhAdLJphDwQRQJaHpyHTp"
    useBalance=false
    
    [fork.system]
    ForkExecCert=0
    
    [fork.sub.storage]
    Enable=0
    
    [fork.sub.valnode]
    Enable=0
    
    [fork.sub.cert]
    Enable=0
    
    [fork.sub.coins]
    Enable=0
    
    [fork.sub.manage]
    Enable=0
    ForkManageExec=0
    
    [fork.sub.ticket]
    Enable=0
    ForkTicketId =0
    ForkTicketVrf =0
    
    [fork.sub.retrieve]
    Enable=0
    ForkRetrive=0
    ForkRetriveAsset=0
    
    [fork.sub.hashlock]
    Enable=0
    ForkBadRepeatSecret=0
    
    [fork.sub.token]
    Enable=0
    ForkTokenBlackList= 0
    ForkBadTokenSymbol= 0
    ForkTokenPrice=0
    ForkTokenSymbolWithNumber=0
    ForkTokenCheck= 0
    
    [fork.sub.trade]
    Enable=0
    ForkTradeBuyLimit= 0
    ForkTradeAsset= 0
    ForkTradeID = 0
    ForkTradeFixAssetDB = 0
    ForkTradePrice = 0
    
    [fork.sub.paracross]
    Enable=0
    ForkParacrossWithdrawFromParachain=0
    ForkParacrossCommitTx=0
    ForkLoopCheckCommitTxDone=0
    #仅平行链适用，自共识分阶段开启，缺省是0，若对应主链高度7200000之前开启过自共识，需要重新配置此分叉，并为之前自共识设置selfConsensEnablePreContract配置项
    ForkParaSelfConsStages=0
    ForkParaAssetTransferRbk=0
    #仅平行链适用，开启挖矿交易的高度，已有代码版本可能未在0高度开启挖矿，需要设置这个高度，新版本默认从0开启挖矿，通过交易配置分阶段奖励
    ForkParaFullMinerHeight=0
    
    [fork.sub.evm]
    Enable=0
    ForkEVMState=0
    ForkEVMABI=0
    ForkEVMFrozen=0
    ForkEVMKVHash=0
    ForkEVMYoloV1=0
    ForkEVMTxGroup=0
    
    [fork.sub.blackwhite]
    Enable=0
    ForkBlackWhiteV2=0
    
    [fork.sub.wasm]
    Enable=0
    
    [fork.sub.guess]
    Enable=0
    
    [fork.sub.lottery]
    Enable=0
    
    [fork.sub.oracle]
    Enable=0
    
    [fork.sub.relay]
    Enable=0
    
    [fork.sub.norm]
    Enable=0
    
    [fork.sub.pokerbull]
    Enable=0
    
    [fork.sub.privacy]
    Enable=0
    
    [fork.sub.game]
    Enable=0
    
    [fork.sub.multisig]
    Enable=0
    
    [fork.sub.unfreeze]
    Enable=0
    ForkTerminatePart=0
    ForkUnfreezeIDX= 0
    
    [fork.sub.autonomy]
    Enable=0
    
    [fork.sub.jsvm]
    Enable=0
    
    [fork.sub.issuance]
    Enable=0
    ForkIssuanceTableUpdate=0
    
    [fork.sub.collateralize]
    Enable=0
    ForkCollateralizeTableUpdate=0
    
    #对已有的平行链如果不是从0开始同步数据，需要设置这个kvmvccmavl的对应平行链高度的fork，如果从0开始同步，statehash会跟以前mavl的不同
    [fork.sub.store-kvmvccmavl]
    ForkKvmvccmavl=0
    
    [metrics]
    #是否使能发送metrics数据的发送
    enableMetrics=false
    #数据保存模式
    dataEmitMode="influxdb"
    
    [metrics.sub.influxdb]
    #以纳秒为单位的发送间隔
    duration=1000000000
    url="http://influxdb:8086"
    database="chain33metrics"
    username=""
    password=""
    namespace=""
    
    [pprof]
    listenAddr=":6060"
    
${GENESIS}
${PRIV_VADATOR}
  env: |
    TITLE=midea
